init_death_spells_effect = {
    # add_to_global_variable_list = { name = death_spells target = flag:raise_dead } # Casted through other means
    add_to_global_variable_list = { name = death_spells target = flag:death_coil }
    add_to_global_variable_list = { name = death_spells target = flag:death_grip }
}

init_raise_undead_types_effect = {
    add_to_global_variable_list = { name = raise_dead_types target = flag:undead }
    add_to_global_variable_list = { name = raise_dead_types target = flag:ghoul }
    add_to_global_variable_list = { name = raise_dead_types target = flag:abomination }
    add_to_global_variable_list = { name = raise_dead_types target = flag:banshee }
    add_to_global_variable_list = { name = raise_dead_types target = flag:vampire }
}

cast_raise_dead_effect = {
    if = {
        limit = { exists = var:raise_dead_recipient }
        var:raise_dead_recipient = {
            save_temporary_scope_as = first_recipient
        }

        save_scope_value_as = {
            name = raise_dead_type
            value = var:raise_dead_type
        }

        var:raise_dead_type = {
            save_scope_as = raise_dead_type
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:raise_dead
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_temporary_scope_as = first_recipient
        }

        var:current_raise_dead_type = {
            save_scope_as = raise_dead_type
        }
    }

    scope:first_recipient ?= {
        show_as_tooltip = {
            switch = {
                trigger = scope:raise_dead_type

                flag:undead = { add_trait = being_undead }
                flag:abomination = { set_trait_rank = { trait = race rank = 21 } }
                flag:banshee = { set_trait_rank = { trait = race rank = 84 } }
                flag:ghoul = { set_trait_rank = { trait = race rank = 85 } }
                flag:vampire = { set_trait_rank = { trait = race rank = 86 } }
            }
        }

        custom_tooltip = {
            text = raise_dead_tt
            wc_resurrect_CHARACTER_with_STATUS_effect = { CHARACTER = scope:first_recipient STATUS = undead }
            scope:resurrected_character ?= {
                root = { add_courtier = prev }
                switch = {
                    trigger = scope:raise_dead_type

                    flag:undead = { add_trait = being_undead }
                    flag:abomination = { set_trait_rank = { trait = race rank = 21 } }
                    flag:banshee = { set_trait_rank = { trait = race rank = 84 } }
                    flag:ghoul = { set_trait_rank = { trait = race rank = 85 } }
                    flag:vampire = { set_trait_rank = { trait = race rank = 86 } }
                }
            }
        }
    }
}

cast_death_coil_effect = {
    if = {
        limit = { exists = var:death_coil_recipient }
        var:death_coil_recipient = {
            save_temporary_scope_as = first_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:death_coil
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_temporary_scope_as = first_recipient
        }
    }

    scope:first_recipient ?= {
        root = {
            save_temporary_scope_value_as = {
                name = duration
                value = wc_spell_death_coil_duration_days_value
            }
        }
        if = {
            limit = {
                has_trait = being_undead
            }
            add_character_modifier = {
                modifier = wc_death_coil_positive_modifier
                days = wc_current_spell_duration
            }
            if = {
                limit = {
                    NOT = {
                        this = root
                    }
                }
                add_opinion = {
                    modifier = wc_casted_helpful_spell
                    target = root
                }
            }
        }
        else = {
            save_scope_value_as = {
                name = spell_dodge_chance
                value = wc_death_magic_resistance_dodge_value
            }
            if = {
                limit = {
                    NOT = {
                        this = root
                    }
                }
                add_opinion = {
                    modifier = wc_casted_harmful_spell
                    target = root
                }
            }
            random_list = {
                90 = {
                    add_character_modifier = {
                        modifier = wc_death_coil_negative_modifier
                        days = wc_current_spell_duration
                    }
                    hidden_effect = {
                        root = {
                            send_interface_toast = {
                                title = wc_spell_hit
                                left_icon = scope:this_recipient
                                right_icon = root
                                custom_tooltip = wc_death_coil_hit_tt
                            }
                        }
                    }
                }
                10 = {
                    custom_tooltip = wc_death_coil_resist_tt
                    modifier = {
                        is_alive = yes
                        add = scope:spell_dodge_chance
                    }
                    hidden_effect = {
                        root = {
                            send_interface_toast = {
                                title = wc_spell_dodged
                                left_icon = scope:this_recipient
                                right_icon = root
                                custom_tooltip = wc_death_coil_dodge
                            }
                        }
                    }
                }
            }
        }
    }
}

cast_death_grip_effect = {
    if = {
        limit = { exists = var:death_grip_recipient }
        var:death_grip_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:death_grip
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        root = {
            save_temporary_scope_value_as = {
                name = duration
                value = wc_spell_death_grip_duration_days_value
            }
        }
        if = {
            limit = {
                root = {
                    is_in_army = yes
                }
            }
            root.location = {
                save_scope_as = caster_location
            }

            custom_tooltip = {
                text = death_grip_movement_tt
                if = {
                    limit = {
                        NOT = {
                            location = scope:caster_location
                        }

                        location = {
                            ordered_neighboring_province = {
                                order_by = {
                                    value = "squared_distance(scope:caster_location)"
                                    multiply = -1
                                }
                                save_scope_as = target_location
                            }
                        }

                        set_army_location = scope:target_location
                    }
                }
            }

            army_commander = {
                add_character_modifier = {
                    modifier = wc_death_grip_modifier
                    days = wc_current_spell_duration
                }

                hidden_effect = {
                    commanding_army ?= {
                        remove_commander = yes
                        assign_commander = prev
                    }
                }
            }
        }
    }
}